{"ast":null,"code":"var _jsxFileName = \"/Users/janujangathieswaran/Documents/React Tutorials/react-complete-guide/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: 'asf1',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'asf21',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'asf11',\n        name: 'Chicken',\n        age: 32\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    this.deletePersonHandler = personIndex => {\n      //copies full array\n      //const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      this.setState({\n        persons: [{\n          name: 'Max',\n          age: 28\n        }, {\n          name: event.target.value,\n          age: 1234\n        }, {\n          name: 'Chicken',\n          age: 32\n        }]\n      });\n    };\n\n    this.togglePersonsHandler = event => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      //jsx code\n      persons = //map persons array to jsx \n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          changed: () => this.nameChangedHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Hi, I'm a react app\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Hi dog!\"), React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Switch Name\"), persons);\n  } //return React.createElement('div',{className: 'App'},React.createElement('h1',null,'Hi min gmong'));\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/janujangathieswaran/Documents/React Tutorials/react-complete-guide/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","otherState","showPersons","deletePersonHandler","personIndex","splice","setState","nameChangedHandler","event","target","value","togglePersonsHandler","doesShow","render","style","backgroundColor","font","border","padding","cursor","map","person","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  state =  {\n    persons: [\n      {id: 'asf1',  name: 'Max', age: 28},\n      {id: 'asf21', name: 'Manu', age: 29},\n      {id: 'asf11', name: 'Chicken', age: 32}\n    ],\n    otherState: 'some other value',\n    showPersons:false\n  };\n\n  // switchNameHandler = (newName) => {\n  // //console.log('was clicked!')\n  //   this.setState({\n  //     persons: [\n  //       {name: newName, age: 28},\n  //       {name: 'Manu', age: 1234},\n  //       {name: 'Chicken', age: 32}\n  //     ]\n  //   })\n  // }\n\n  deletePersonHandler = (personIndex) => {\n    //copies full array\n    //const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice(personIndex,1);\n    this.setState({persons: persons});\n\n  }\n\n  nameChangedHandler = (event, id) => {\n    this.setState({\n      persons: [\n        {name: 'Max', age: 28},\n        {name: event.target.value, age: 1234},\n        {name: 'Chicken', age: 32}\n      ]\n    })\n  }\n  togglePersonsHandler = (event) =>{\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n  render(){\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding:'8px',\n      cursor: 'pointer'\n    };\n\n    let persons = null;\n\n    if (this.state.showPersons){\n      //jsx code\n      persons = (\n        //map persons array to jsx \n        <div>\n            {this.state.persons.map((person,index) =>{\n              return <Person \n                click={() => this.deletePersonHandler(index)}\n                name={person.name}\n                age={person.age}\n                key={person.id}\n                changed={() => this.nameChangedHandler}/>\n            })}\n            {/* <Person \n              name={this.state.persons[0].name} \n              age={this.state.persons[0].age}\n              click={this.switchNameHandler.bind(this,'Maximilian!!')}>My hobbies: racing</Person>\n            <Person \n              name={this.state.persons[1].name} \n              age={this.state.persons[1].age}\n              changed={this.nameChangedHandler}>My hobbies: racing</Person>\n            <Person \n              name={this.state.persons[2].name} \n              age={this.state.persons[2].age}>My hobbies: racing</Person> */}\n          </div> \n      );\n    }\n    return(\n      <div className=\"App\">\n        <h1>Hi, I'm a react app</h1>\n        <p>Hi dog!</p>\n        <button \n          style={style}\n          onClick={this.togglePersonsHandler}>Switch Name</button>\n          {persons}\n\n          \n        \n          \n          \n          \n      </div>\n    );\n  }\n    //return React.createElement('div',{className: 'App'},React.createElement('h1',null,'Hi min gmong'));\n  \n}\n\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}