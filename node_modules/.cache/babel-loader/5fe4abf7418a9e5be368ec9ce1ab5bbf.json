{"ast":null,"code":"import _objectSpread from \"/Users/janujangathieswaran/Documents/React Tutorials/react-complete-guide/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/janujangathieswaran/Documents/React Tutorials/react-complete-guide/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport classes from './App.module.css';\nimport Persons from '../components/Persons/Persons';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\nimport Cockpit from '../components/Cockpit/Cockpit';\n\nclass App extends Component {\n  constructor(props) {\n    super(props); //execute constructor of component that is extended\n\n    this.state = {\n      persons: [{\n        id: 'asf1',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'asf21',\n        name: 'Garry',\n        age: 29\n      }, {\n        id: 'asf11',\n        name: 'Bob',\n        age: 32\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    this.deletePersonHandler = personIndex => {\n      //copies full array\n      //const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      //find person index\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id == id;\n      }); //copy person object\n\n      const person = _objectSpread({}, this.state.persons[personIndex]);\n\n      person.name = event.target.value; //copy persons array\n\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = event => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n\n    console.log('[App.js] constructor'); //see from which file the App.js stems\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log('[App.js] getDerivedStateFromProps', props);\n    return state;\n  } // switchNameHandler = (newName) => {\n  // //console.log('was clicked!')\n  //   this.setState({\n  //     persons: [\n  //       {name: newName, age: 28},\n  //       {name: 'Manu', age: 1234},\n  //       {name: 'Chicken', age: 32}\n  //     ]\n  //   })\n  // }\n\n\n  render() {\n    console.log('[App.js] render');\n    let persons = null;\n\n    if (this.state.showPersons) {\n      //jsx code\n      persons = //map persons array to jsx by taking a function and applying to every element in the array\n      //list of persons as opposed to individual person components\n      React.createElement(Persons, {\n        persons: this.state.persons,\n        clicked: this.deletePersonHandler,\n        changed: this.nameChangedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Cockpit, {\n      title: this.props.appTitle,\n      showPersons: this.state.showPersons,\n      persons: this.state.persons,\n      clicked: this.togglePersonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), persons);\n  } //return React.createElement('div',{className: 'App'},React.createElement('h1',null,'Hi min gmong'));\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/janujangathieswaran/Documents/React Tutorials/react-complete-guide/src/containers/App.js"],"names":["React","Component","classes","Persons","ErrorBoundary","Cockpit","App","constructor","props","state","persons","id","name","age","otherState","showPersons","deletePersonHandler","personIndex","splice","setState","nameChangedHandler","event","findIndex","p","person","target","value","togglePersonsHandler","doesShow","console","log","getDerivedStateFromProps","render","appTitle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from  './App.module.css';\nimport Persons from '../components/Persons/Persons';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\nimport Cockpit from '../components/Cockpit/Cockpit';\n  \nclass App extends Component {\n  constructor(props){\n    super(props) //execute constructor of component that is extended\n    console.log('[App.js] constructor'); //see from which file the App.js stems\n  }\n  state =  {\n    persons: [\n      {id: 'asf1',  name: 'Max', age: 28},\n      {id: 'asf21', name: 'Garry', age: 29},\n      {id: 'asf11', name: 'Bob', age: 32}\n    ],\n    otherState: 'some other value',\n    showPersons:false\n  };\n\n  static getDerivedStateFromProps(props,state){\n    console.log('[App.js] getDerivedStateFromProps',props);\n    return state;\n  }\n\n  // switchNameHandler = (newName) => {\n  // //console.log('was clicked!')\n  //   this.setState({\n  //     persons: [\n  //       {name: newName, age: 28},\n  //       {name: 'Manu', age: 1234},\n  //       {name: 'Chicken', age: 32}\n  //     ]\n  //   })\n  // }\n\n  deletePersonHandler = (personIndex) => {\n    //copies full array\n    //const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice(personIndex,1);\n    this.setState({persons: persons});\n\n  }\n\n  nameChangedHandler = (event, id) => {\n    //find person index\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id == id;\n    });\n\n    //copy person object\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n    \n    person.name = event.target.value;\n\n    //copy persons array\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState({persons: persons});\n  }\n  togglePersonsHandler = (event) =>{\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n  render(){\n    console.log('[App.js] render');\n    let persons = null;\n\n    if (this.state.showPersons){\n      //jsx code\n      persons =\n        //map persons array to jsx by taking a function and applying to every element in the array\n        //list of persons as opposed to individual person components\n        <Persons \n          persons={this.state.persons}\n          clicked={this.deletePersonHandler}\n          changed={this.nameChangedHandler}/>;\n    }\n    \n    return( \n        <div className={classes.App}>\n            <Cockpit\n              title={this.props.appTitle}\n              showPersons={this.state.showPersons}\n              persons={this.state.persons}\n              clicked={this.togglePersonsHandler}/>\n            {persons}\n        </div>\n    );\n  }\n    //return React.createElement('div',{className: 'App'},React.createElement('h1',null,'Hi min gmong'));\n  \n}\n\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}