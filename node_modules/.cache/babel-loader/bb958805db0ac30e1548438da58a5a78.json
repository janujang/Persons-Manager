{"ast":null,"code":"import _objectSpread from \"/Users/janujangathieswaran/Documents/React Tutorials/react-complete-guide/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/janujangathieswaran/Documents/React Tutorials/react-complete-guide/src/App.js\";\nimport React, { Component } from 'react';\nimport classes from './App.module.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: 'asf1',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'asf21',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'asf11',\n        name: 'Chicken',\n        age: 32\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    this.deletePersonHandler = personIndex => {\n      //copies full array\n      //const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      //find person index\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id == id;\n      }); //copy person object\n\n      const person = _objectSpread({}, this.state.persons[personIndex]);\n\n      person.name = event.target.value; //copy persons array\n\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = event => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    let btnClass = '';\n    let persons = null;\n\n    if (this.state.showPersons) {\n      //jsx code\n      persons = //map persons array to jsx by taking a function and applying to every element in the array\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          changed: event => this.nameChangedHandler(event, person.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        });\n      }));\n      btnClass = classes.Red;\n    }\n\n    const assignedClasses = [];\n\n    if (this.state.persons.length <= 2) {\n      assignedClasses.push(classes.red);\n    }\n\n    if (this.state.persons.length <= 1) {\n      assignedClasses.push(classes.bold);\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Hi, I'm a react app\"), React.createElement(\"p\", {\n      className: assignedClasses.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" This works!\"), React.createElement(\"button\", {\n      className: btnClass,\n      onClick: this.togglePersonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Switch Name\"), persons);\n  } //return React.createElement('div',{className: 'App'},React.createElement('h1',null,'Hi min gmong'));\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/janujangathieswaran/Documents/React Tutorials/react-complete-guide/src/App.js"],"names":["React","Component","classes","Person","App","state","persons","id","name","age","otherState","showPersons","deletePersonHandler","personIndex","splice","setState","nameChangedHandler","event","findIndex","p","person","target","value","togglePersonsHandler","doesShow","render","btnClass","map","index","Red","assignedClasses","length","push","red","bold","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from  './App.module.css';\nimport Person from './Person/Person';\n  \nclass App extends Component {\n  state =  {\n    persons: [\n      {id: 'asf1',  name: 'Max', age: 28},\n      {id: 'asf21', name: 'Manu', age: 29},\n      {id: 'asf11', name: 'Chicken', age: 32}\n    ],\n    otherState: 'some other value',\n    showPersons:false\n  };\n\n  // switchNameHandler = (newName) => {\n  // //console.log('was clicked!')\n  //   this.setState({\n  //     persons: [\n  //       {name: newName, age: 28},\n  //       {name: 'Manu', age: 1234},\n  //       {name: 'Chicken', age: 32}\n  //     ]\n  //   })\n  // }\n\n  deletePersonHandler = (personIndex) => {\n    //copies full array\n    //const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice(personIndex,1);\n    this.setState({persons: persons});\n\n  }\n\n  nameChangedHandler = (event, id) => {\n    //find person index\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id == id;\n    });\n\n    //copy person object\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n    \n    person.name = event.target.value;\n\n    //copy persons array\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState({persons: persons});\n  }\n  togglePersonsHandler = (event) =>{\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n  render(){\n    let btnClass = '';\n\n\n    let persons = null;\n\n    if (this.state.showPersons){\n      //jsx code\n      persons = (\n        //map persons array to jsx by taking a function and applying to every element in the array\n        <div>\n            {this.state.persons.map((person,index) =>{\n              return <Person \n                click={() => this.deletePersonHandler(index)}\n                name={person.name}\n                age={person.age}\n                key={person.id}\n                changed={(event) => this.nameChangedHandler(event, person.id)}/>\n            })}\n            {/* <Person \n              name={this.state.persons[0].name} \n              age={this.state.persons[0].age}\n              click={this.switchNameHandler.bind(this,'Maximilian!!')}>My hobbies: racing</Person>\n            <Person \n              name={this.state.persons[1].name} \n              age={this.state.persons[1].age}\n              changed={this.nameChangedHandler}>My hobbies: racing</Person>\n            <Person \n              name={this.state.persons[2].name} \n              age={this.state.persons[2].age}>My hobbies: racing</Person> */}\n          </div> \n      );\n      btnClass = classes.Red;          \n    }\n    const assignedClasses = [];\n    if(this.state.persons.length <=2){\n      assignedClasses.push(classes.red);\n    }\n    if (this.state.persons.length <=1){\n      assignedClasses.push(classes.bold);\n    }\n    return( \n        <div className={classes.App}>\n          <h1>Hi, I'm a react app</h1>\n          <p className={assignedClasses.join(' ')}> This works!</p>\n          <button className={btnClass}\n            onClick={this.togglePersonsHandler}>Switch Name</button>\n            {persons}\n\n            \n          \n            \n            \n            \n        </div>\n    );\n  }\n    //return React.createElement('div',{className: 'App'},React.createElement('h1',null,'Hi min gmong'));\n  \n}\n\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}